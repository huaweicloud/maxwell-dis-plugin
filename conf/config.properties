# mysql username 
user=maxwell
# mysql password
password=YOU_PASSWORD
# mysql host
host=localhost
# mysql port
port=3306

# log level [debug | info | warn | error]
log_level=info
# output DDL (table-alter, table-create, table-delete, etc) events
output_ddl=false
# input to dis partition function [database | table]
producer_partition_by=table
# Maxwell will be terminated on DIS errors when false. Otherwise, those producer errors are only logged.
ignore_producer_error=false
# the frequency seconds that succeeded/failed messages are emitted to the log
metrics_slf4j_interval=60

# type of producer to use, default is 'dis'
producer=dis
# DIS Stream to write to.
dis.stream=YOU_STREAM_NAME
# if output_ddl is true, DDL changes will write to here (it will be the same as dis.stream when it's empty)
dis.ddl.stream=
# cloud region id
dis.region=cn-north-1
# user ak 
dis.ak=YOU_AK
# user sk
dis.sk=YOU_SK
# user project id
dis.projectId=YOU_PROJECT_ID
# DIS endpoint
dis.endpoint=https://dis.cn-north-1.myhuaweicloud.com
# dis.stream or dis.ddl.stream info cache second
dis.stream.cache.second=60

# database or table filter. command separated list of filter-rules, evaluated in sequence.
# A filter rule is:
#  <type> ":" <db> "." <tbl> [ "." <col> "=" <col_val> ]
#  type    ::= [ "include" | "exclude" ]
#  db      ::= [ "/regexp/" | "string" | "`string`" | "*" ]
#  tbl     ::= [ "/regexp/" | "string" | "`string`" | "*" ]
#  col     ::= "column_name"
#  col_val ::= [ "/regexp/" | "string" | "`string`" | "*" ]
# example1 exclude: *.*,include: mydatabase.*
# example2 exclude: *.*,include: mydatabase.mytable
# example3 exclude: *.*,include: mydatabase.mytable, include: mydatabase./mydate_\\d*/
# example4 exclude: db.*, include: *.tbl, include: *./bar(bar)?/, exclude: foo.bar.col=val
filter=